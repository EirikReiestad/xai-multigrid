[[-1.53346565e-02 -2.20539376e-01  4.44369279e-02  2.85406023e-01]
 [-1.79428607e-02 -4.02048618e-01  1.33263096e-01  7.28282630e-01]
 [ 1.94905722e-03 -3.99115443e-01  1.00384295e-01  6.60705984e-01]
 [ 7.29941800e-02  6.19802654e-01 -3.72827351e-02 -8.86640668e-01]
 [ 2.57713627e-02 -2.01052547e-01  6.35806099e-02  3.00780773e-01]
 [ 3.38116363e-02  2.29118258e-01  1.48079656e-02 -2.91234493e-01]
 [ 1.14119291e-01  4.27070200e-01 -9.71489474e-02 -6.48960352e-01]
 [-6.03325199e-03 -5.95480442e-01  1.13598414e-01  9.83234048e-01]
 [ 3.76725607e-02 -1.99652150e-01  4.66561839e-02  2.69597739e-01]
 [ 3.36795188e-02 -3.95407766e-01  5.20481393e-02  5.76623619e-01]
 [ 1.01698436e-01  6.21042728e-01 -7.88316876e-02 -9.15862978e-01]
 [-2.59838328e-02 -5.98736405e-01  1.47828743e-01  1.05976188e+00]
 [ 1.35128722e-01  8.19815636e-01 -1.29539877e-01 -1.29573429e+00]
 [ 3.77502330e-02 -3.88353178e-03  4.74093519e-02 -3.76583599e-02]
 [-1.97454449e-02 -2.60784309e-02  5.01450486e-02  7.06270989e-03]
 [ 3.83940004e-02  4.24025983e-01  8.98327585e-03 -5.79210639e-01]
 [ 5.14501035e-02  4.23938245e-01 -8.27516429e-03 -5.77213466e-01]
 [ 5.99288717e-02  2.28933245e-01 -1.98194347e-02 -2.87148893e-01]
 [ 3.31273787e-02  3.42127420e-02  1.48735903e-02 -3.28122708e-03]
 [ 2.85348482e-02  2.29626551e-01  2.09233668e-02 -3.02488804e-01]
 [ 1.22660697e-01  6.23401642e-01 -1.10128157e-01 -9.70585823e-01]
 [ 2.17503123e-02 -3.97020370e-01  6.95962235e-02  6.12818718e-01]
 [ 1.71851501e-01  1.21289468e+00 -1.87974632e-01 -1.96282554e+00]
 [-3.79585624e-02 -7.95473993e-01  1.69023991e-01  1.39495313e+00]
 [ 1.38099045e-02 -5.93042374e-01  8.18526000e-02  9.26584661e-01]
 [ 8.53902325e-02  8.15410316e-01 -5.50155491e-02 -1.19080687e+00]
 [ 6.45075366e-02  4.24332142e-01 -2.55624112e-02 -5.86016238e-01]
 [ 4.68745194e-02  2.28779286e-01 -2.60093692e-03 -2.83711374e-01]
 [ 2.78385337e-02  3.48157696e-02  2.12551095e-02 -1.65871680e-02]
 [-1.48385810e-02 -2.48037763e-02  4.48586494e-02 -2.10860372e-02]
 [-5.38680404e-02 -6.02809727e-01  1.96923047e-01  1.15953195e+00]
 [ 1.51525036e-01  1.01632321e+00 -1.55454561e-01 -1.62600410e+00]]
tensor([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,
        0, 1, 1, 1, 0, 0, 0, 1])
Traceback (most recent call last):
  File "/home/eirik/Projects/multigrid/rllib/examples/cartpole.py", line 12, in <module>
    dqn.learn()
  File "/home/eirik/Projects/multigrid/rllib/wrappers/single_algorithm.py", line 19, in learn
    self._algorithm.learn(steps)
  File "/home/eirik/Projects/multigrid/rllib/algorithms/algorithm.py", line 33, in learn
    self.collect_rollouts()
  File "/home/eirik/Projects/multigrid/rllib/wrappers/single_algorithm.py", line 32, in collect_rollouts
    self._algorithm.train_step(
  File "/home/eirik/Projects/multigrid/rllib/algorithms/dqn/dqn.py", line 44, in train_step
    self._optimize_model()
  File "/home/eirik/Projects/multigrid/rllib/wrappers/single_algorithm.py", line 89, in _optimize_model
    next_state_values[non_final_mask] = (
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
RuntimeError: Index put requires the source and destination dtypes match, got Float for the destination and Long for the source.
